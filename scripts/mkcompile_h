#!/bin/sh
# SPDX-License-Identifier: GPL-2.0

TARGET=$1
ARCH=$2
SMP=$3
PREEMPT=$4
PREEMPT_RT=$5
CC_VERSION="$6"
LD=$7

vecho() { [ "${quiet}" = "silent_" ] || echo "$@" ; }

# Do not expand names
set -f

# Fix the language to get consistent output
LC_ALL=C
export LC_ALL

# Static version (hardcoded)
VERSION="1"

# Dynamic timestamp (based on your PC's current time)
TIMESTAMP=$(date)

# Hardcoded user and host
LINUX_COMPILE_BY="sreejith"
LINUX_COMPILE_HOST="arch"

UTS_VERSION="#$VERSION"
CONFIG_FLAGS=""
if [ -n "$SMP" ] ; then CONFIG_FLAGS="SMP"; fi
if [ -n "$PREEMPT" ] ; then CONFIG_FLAGS="$CONFIG_FLAGS PREEMPT"; fi
if [ -n "$PREEMPT_RT" ] ; then CONFIG_FLAGS="$CONFIG_FLAGS PREEMPT_RT"; fi

# Truncate to maximum length
UTS_LEN=64
UTS_VERSION="$(echo $UTS_VERSION $CONFIG_FLAGS $TIMESTAMP | cut -b -$UTS_LEN)"

# Generate a temporary compile.h
{
  echo "/* This file is auto generated, version $VERSION */"
  if [ -n "$CONFIG_FLAGS" ] ; then echo "/* $CONFIG_FLAGS */"; fi

  echo "#define UTS_MACHINE \"$ARCH\""
  echo "#define UTS_VERSION \"$UTS_VERSION\""
  printf '#define LINUX_COMPILE_BY "%s"\n' "$LINUX_COMPILE_BY"
  echo "#define LINUX_COMPILE_HOST \"$LINUX_COMPILE_HOST\""

  LD_VERSION=$($LD -v | head -n1 | sed 's/(compatible with [^)]*)//' | sed 's/[[:space:]]*$//')
  printf '#define LINUX_COMPILER "%s"\n' "$CC_VERSION, $LD_VERSION"
} > .tmpcompile

# Only replace compile.h if changed
IGNORE_PATTERN="UTS_VERSION"
if [ -r $TARGET ] && \
      grep -v "$IGNORE_PATTERN" $TARGET > .tmpver.1 && \
      grep -v "$IGNORE_PATTERN" .tmpcompile > .tmpver.2 && \
      cmp -s .tmpver.1 .tmpver.2; then
   rm -f .tmpcompile
else
   vecho "  UPD     $TARGET"
   mv -f .tmpcompile $TARGET
fi
rm -f .tmpver.1 .tmpver.2

